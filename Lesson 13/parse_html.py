from parser import Parser
import requests
import re


class ParseHTML(Parser):
    LINK_PATTERN = r'(https?:\/\/[\da-z\.-]+\.[a-z\.]{2,6}[\/\w\.-]*)\/?'
    HTTPS_PATTERN = r'(https?:\/\/)'

    def __go_to_url(self, url):
        if re.search(self.HTTPS_PATTERN, url) is None:
            page = requests.get(f'https://{url}')
        else:
            page = requests.get(url)
        return page

    def __get_list_of_urls(self):
        url = self._parse_url()
        url = self.__go_to_url(url)
        list_of_urls = re.findall(self.LINK_PATTERN, url.text)
        return list_of_urls

    @staticmethod
    def __save_valid_urls(url):
        with open(f'valid links.txt', 'w+') as file:
            file.write(f'{url}\n')

    @staticmethod
    def __save_broken_urls(url):
        with open(f'broken links.txt', 'w+') as file:
            file.write(f'{url}')

    """–ú–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –Ω–µ –ø–∏—Å–∞—Ç—å –¥–≤–µ –º–µ—Ç–æ–¥–∞ –≤—ã—à–µ, –∞ –ø—Ä–æ—Å—Ç–æ –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ if –æ—Ç–∫—Ä—ã–≤–∞—Ç—å —Ñ–∞–π–ª –∏ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –≤ –Ω–µ–≥–æ –¥–∞–Ω–Ω—ã–µ.
    –ù–æ —Ç–æ–≥–¥–∞ –≤–æ–∑–Ω–∏–∫–Ω–µ—Ç –ø—Ä–æ–±–ª–µ–º–∞.–ù–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ª–∏–±–æ –≤—Å–µ –≤—Ä–µ–º—è –æ—Ç–∫—Ä—ã–≤–∞—Ç—å —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–∞ a+, –ª–∏–±–æ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏
    —Ä–µ–∂–∏–º–∞ w+ –æ–Ω –ø—Ä–æ—Å—Ç–æ –±—É–¥–µ—Ç –∫–∞–∂–¥—ã–π —Ä–∞–∑ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—Ç—å—Å—è. –ü–æ—ç—Ç–æ–º—É –±—ã–ª–æ —Ä–µ—à–µ–Ω–æ —Å–æ–±–∏—Ä–∞—Ç—å –≤–∞–ª–∏–¥–Ω—ã–µ –∏ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã–µ –ª–∏–Ω–∫–∏
    –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –∞ –∑–∞—Ç–µ–º –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –¥–∞–Ω–Ω–µ—ã –∏–∑ —ç—Ç–∏—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã."""
    def save_urls(self):
        valid_urls = str()
        broken_urls = str()
        list_of_urls = self.__get_list_of_urls()
        print('Please wait, URL parsing in progress üîÑ')
        for i in list_of_urls:
            response = self.__go_to_url(i)
            if response.status_code == 200:
                valid_urls += f'{i}\n'
            else:
                broken_urls += f'{i}\n'
        ParseHTML.__save_valid_urls(valid_urls)
        ParseHTML.__save_broken_urls(broken_urls)
